---
globs: app/backend/**/*.py
alwaysApply: false
---

# バックエンド (FastAPI): 品質保証

Pythonバックエンド開発における品質保証の実行方法です。
コード変更時・コミット前は以下のルールに従ってください。

## 品質保証の実行

### 基本フロー
コード変更後は以下の順序で実行し、すべてパスすることを確認してください：

```bash
# 1. フォーマットチェック
uv run ruff format --check .
# 2. リンターチェック  
uv run ruff check . --fix
# 3. 型チェック
uv run pyright .
# 4. テスト実行
uv run --frozen pytest -v --tb=short --cov=src --cov-report=term
```

## チェック内容

- **フォーマット**: フォーマッターを実行し、差分が0であること
- **リンター**: リンターを実行し、エラー・警告が0であること
- **型チェック**: 型チェッカーを実行し、型エラーが0であること
- **テスト**: テストを実行し、全テストがパスすること

## フォーマッターに任せる内容

Ruffフォーマッターは以下の内容を自動で統一します：

- **インデント**: スペース4文字での統一
- **行の長さ**: 88文字での自動折り返し
- **クォート**: 文字列のダブルクォート統一
- **カンマ**: マジックトレーリングカンマの適切な配置
- **空行**: クラス・関数間の適切な空行配置
- **インポート順**: インポート文の整理と並び替え

## 注意事項

- 自動修正後は必ずテストを実行して動作確認
- 型エラーは手動修正が必要
- テストエラーは実装コードまたはテストコードの修正が必要
- `ruff.toml`の`ignore`に追加し、リンタールールを無効化する場合は**必ず**事前確認
